@page "/combobox"

@using System.Net.Http.Json
@using BoomsPG.Data
@using Microsoft.AspNetCore.Components
@using MudBlazor.Extensions
@using static BoomsPG.Data.Element

@inject HttpClient httpClient
@inject WeatherForecastService ForecastService

<MudGrid>
    <MudItem xs="12" Class="d-flex gap-4 align-center justify-center">
        <MudComboBox @bind-Value="@_value" @bind-Text="@_text" @bind-SelectedValues="@_selectedValues" Variant="Variant.Filled"
                     Label="Standard (Contains)" Editable="true"  autocomplete="new-password">
            <MudComboBoxItem Value="@("Foo")" Text="Foo">Foo</MudComboBoxItem>
            <MudComboBoxItem Value="@("Bar")" Text="Bar">Bar</MudComboBoxItem>
            <MudComboBoxItem Value="@("Fizz")" Text="Fizz">Fizz</MudComboBoxItem>
            <MudComboBoxItem Value="@("Buzz")" Text="Buzz">Buzz</MudComboBoxItem>
            @foreach (var item in forecasts)
            {
                <MudComboBoxItem Value="@(item.Summary)">@item.Summary</MudComboBoxItem>
            }
        </MudComboBox>
    </MudItem>
</MudGrid>

@code {
    string _value;
    string _text;
    IEnumerable<string> _selectedValues;
    
    private IEnumerable<Element> Elements = new List<Element>();

    // protected override async Task OnInitializedAsync()
    // {
    //     Elements = await httpClient.GetFromJsonAsync<List<Element>>("webapi/periodictable");
    // }
    
    
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
    }
}